package com.blogspot.agusticar.miscuentasv2.ui.theme

import androidx.compose.runtime.Immutable
import androidx.compose.runtime.staticCompositionLocalOf
import androidx.compose.ui.graphics.Color

@Immutable
data class CustomColorsPalette(
    val buttonColorDefault: Color = Color.Unspecified,
    val buttonColorPressed: Color = Color.Unspecified,
    val disableButton:Color = Color.Unspecified,
    val textButtonColorDefault: Color = Color.Unspecified,
    val textButtonColorPressed: Color = Color.Unspecified,
    val backgroundPrimary: Color = Color.Unspecified,
    val backgroundSecondary: Color = Color.Unspecified,
    val barBackground: Color = Color.Unspecified,
    val textColor: Color = Color.Unspecified,
    val invertedTextColor: Color = Color.Unspecified,
    val boldTextColor: Color = Color.Unspecified,
    val barColor: Color = Color.Unspecified,
    val iconInvert: Color = Color.Unspecified,
    val iconColor: Color = Color.Unspecified,
    val contentBarColor:Color = Color.Unspecified,
    val indicatorDefault:Color = Color.Unspecified,
    val indicatorSelected:Color = Color.Unspecified,
    val imageBackground:Color = Color.Unspecified,
    val drawerColor:Color = Color.Unspecified,
    val headDrawerColor:Color = Color.Unspecified,
    val contentDrawerColor:Color = Color.Unspecified,
    val focusedContainerTextField:Color=Color.Unspecified,
    val unfocusedContainerTextField:Color=Color.Unspecified,
    val focusedTextFieldColor:Color=Color.Unspecified,
    val unfocusedTextFieldColor:Color=Color.Unspecified,
    val imageTutorialInit:Color=Color.Unspecified,
    val imageTutorialTarget:Color=Color.Unspecified,
   val rowDrawerPressed:Color=Color.Unspecified,
    val topBarContent:Color = Color.Unspecified,
    val backgroundSwitch:Color = Color.Unspecified,
    val thumbCheckedColor:Color = Color.Unspecified,
    val thumbDefaultColor:Color = Color.Unspecified,
    val trackCheckedColor:Color = Color.Unspecified,
    val trackDefaultColor:Color = Color.Unspecified,
    val textHeadColor:Color = Color.Unspecified,
    val textTransition:Color = Color.Unspecified,
    val buttonTransition:Color = Color.Unspecified,
    val iconCamara:Color = Color.Unspecified,
    val iconIncomeInit:Color = Color.Unspecified,
    val iconIncomeTarget:Color = Color.Unspecified,
    val iconExpenseInit:Color = Color.Unspecified,
    val iconExpenseTarget:Color = Color.Unspecified,
    val incomeColor:Color = Color.Unspecified,
    val expenseColor:Color = Color.Unspecified


    )

val LightCustomColorsPalette = CustomColorsPalette(
    buttonColorDefault =  DeepTerracotta,
    buttonTransition = WarmChocolate,
    buttonColorPressed = WarmChocolate,
    disableButton = SoftPeach,
    textButtonColorDefault =  LightYellow,
    textButtonColorPressed =  White,
    backgroundPrimary =  PeachyCream,
    backgroundSecondary =  LightYellow,
    barBackground= DeepTerracotta,
    textColor =  DeepBrown,
    textTransition = White,
    invertedTextColor= LightYellow,
    boldTextColor =  Black,
    iconInvert= LightYellow,
    iconColor = LightYellow,
    contentBarColor = DarkBrown,
    indicatorDefault =  SoftPeach,
    indicatorSelected =  WarmChocolate,
    imageBackground = DeepTerracotta,
    drawerColor = LightYellow,
    headDrawerColor = DarkPeach,
    contentDrawerColor = DarkBrown,
    focusedContainerTextField = LightYellow,
    unfocusedContainerTextField = LightYellow,
    focusedTextFieldColor = DarkBrown,
    unfocusedTextFieldColor = DarkBrown,
    imageTutorialInit = SoftPeach,
    imageTutorialTarget = DarkPeach,
    rowDrawerPressed = DeepTerracotta,
    topBarContent=LightYellow,
    backgroundSwitch = BurntPeach,
    thumbCheckedColor = DeepTerracotta,
    thumbDefaultColor = PeachyCream,
    trackCheckedColor = SoftPeach,
    trackDefaultColor = DeepTerracotta,
    textHeadColor = Black,
    iconCamara = Black,
    iconIncomeInit = greenLight,
    iconIncomeTarget = greenDark,
    iconExpenseInit = BurntPeach,
    iconExpenseTarget = SoftPeach,
    incomeColor = greenLight,
    expenseColor = redLight


)
val DarkCustomColorsPalette = CustomColorsPalette(
    buttonColorDefault =  SoftPeach,
    buttonColorPressed =  PeachyCream,
    buttonTransition = PeachyCream,
    disableButton = LightYellow,
    textButtonColorDefault =  DarkBrown,
    textButtonColorPressed =  Black,
    backgroundPrimary =  DarkBrown,
    backgroundSecondary =  DarkBrown,
    barBackground= Black,
    textColor =  LightYellow,
    textTransition = Black,
    invertedTextColor= DarkBrown,
    boldTextColor =  LightYellow,
    iconInvert = LightYellow,
    iconColor = LightYellow,
    contentBarColor = LightYellow,
    indicatorDefault =  SoftPeach,
    indicatorSelected =  PeachyCream,
    imageBackground = Black,
    drawerColor = MediumDarkBrown,
    headDrawerColor = DeepBrown,
    contentDrawerColor = White,
    focusedContainerTextField = LightGrey,
    unfocusedContainerTextField = LightGrey,
    focusedTextFieldColor = LightYellow,
    unfocusedTextFieldColor = LightYellow,
    imageTutorialInit = SoftPeach,
    imageTutorialTarget = PeachyCream,
    topBarContent=LightYellow,
    rowDrawerPressed = PeachyCream,
    backgroundSwitch = Black,
    thumbCheckedColor = SoftPeach,
    thumbDefaultColor = PeachyCream,
    trackCheckedColor = PeachyCream,
    trackDefaultColor = Black,
    textHeadColor = SoftPeach,
    iconCamara = Black,
    iconIncomeInit = greenLight,
    iconIncomeTarget = greenDark,
    iconExpenseInit = BurntPeach,
    iconExpenseTarget = SoftPeach,
    incomeColor = greenPistacho,
    expenseColor = coralRed
)

val LocalCustomColorsPalette = staticCompositionLocalOf { CustomColorsPalette() }
